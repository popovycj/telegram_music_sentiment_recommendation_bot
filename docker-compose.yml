version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    env_file: .env
    environment:
      POSTGRES_DB:   ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend

  bot:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    environment:
      DB_HOST:       postgres
      DB_NAME:       ${DB_NAME}
      DB_USER:       ${DB_USER}
      DB_PASSWORD:   ${DB_PASSWORD}
      REDIS_URL:     "redis://redis:6379"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - backend
    restart: unless-stopped
    volumes:
      - ./:/app

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend

volumes:
  postgres_data:
  redis_data:

networks:
  backend:
    driver: bridge
